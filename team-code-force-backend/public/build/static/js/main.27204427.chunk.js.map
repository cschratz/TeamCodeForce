{"version":3,"sources":["components/.config.js","components/images/NPS.png","components/images/spinner.gif","components/slideshow-data.js","components/slideshow.jsx","components/NotFound.jsx","components/Wishlist.jsx","components/ParkHistory.jsx","components/Profile.jsx","components/InfoWindow.jsx","components/Marker.jsx","components/MapStyling.js","components/Map.jsx","components/RouteForm.jsx","components/spinner.js","components/ParkPal.jsx","components/Activities.jsx","components/NotSignedIn.jsx","components/Home.jsx","components/App.jsx","index.js"],"names":["module","exports","google","MAPS_API_KEY","clientID","clientSecret","nps","NPS_API_KEY","session","cookieKey","slideShow","name","image","review","SlideShow","zoomInProperties","indicators","scale","id","map","each","index","key","style","width","height","src","alt","NotFound","className","Wishlist","userID","useState","wishList","setWishList","useEffect","data","a","requestOptions","method","headers","body","JSON","stringify","fetch","json","then","getWishList","park","ParkHistory","history","setHistory","getHistory","Profile","user","borderRadius","float","marginLeft","marginRight","InfoWindow","url","desc","position","bottom","left","backgroundColor","boxShadow","padding","fontSize","zIndex","objectFit","href","target","rel","onClick","response","console","log","saveWishlist","saveParkHistory","Marker","imagePark","isShown","setIsShown","isHovered","setIsHovered","role","onMouseEnter","onMouseLeave","NPSLogo","mapStyling","Map","parks","React","myMarkers","setMarkers","mapReference","setMapReference","mapsReference","setMapsReference","lat","lng","center","setCenter","start","setStart","handleDirections","waypnts","forEach","length","push","location","stopover","directionsService","DirectionsService","directionsDisplay","DirectionsRenderer","route","origin","destination","waypoints","travelMode","optimizeWaypoints","status","setDirections","Polyline","path","routes","overview_path","setMap","error","type","placeholder","value","onChange","event","onKeyUp","keyCode","bootstrapURLKeys","options","styles","MapStyling","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","searchName","description","RouteForm","getpark","searchTerm","setSearchTerm","spinner","margin","ParkPal","setParks","loading","setLoading","userState","state","toLowerCase","axios","get","res","latitude","find","entry","designation","parseFloat","longitude","images","Activities","parkActivities","setParkActivities","userActivities","setUserActivities","resultingParks","setResultingParks","isLoading","setIsLoading","currentActivities","catch","multiple","size","selectedOptions","selectedIds","Array","from","item","searchIds","join","currentParks","fullName","NotSignedIn","Home","isAuthenticated","setIsAuthenticated","setUser","process","REACT_APP_SERVER_PORT","credentials","Accept","Error","responseJson","activeClassName","exact","to","window","open","component","render","props","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.27204427.chunk.js","sourcesContent":["module.exports = {\n  google: {\n    MAPS_API_KEY: 'AIzaSyA_f9UfWkivU2qSpQ5Cw1y62ppNMDCfCLo',\n    clientID:\"429560753583-nm3b3a22tcj73egkj1rk68a897atsutk.apps.googleusercontent.com\",\n    clientSecret:\"p-UlvDCQedsOgIKBhMbB-wXO\"\n  },\n  nps: {\n    NPS_API_KEY: 'gwHKy0xMUoHYHE6MhzXkBbKYuPcejjLlkuMpJdK0'\n  },\n  session: {\n    cookieKey: 'teamcodeforcetearinitup'\n  }\n}","module.exports = __webpack_public_path__ + \"static/media/NPS.29626f8e.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.68a0a985.gif\";","const slideShow = [\n  {\n    name: 'Acadia National Park',\n    image: 'https://www.nps.gov/common/uploads/structured_data/3C7B45AE-1DD8-B71B-0B7EE131C7DFC2F5.jpg',\n    review: '\"Millions of people come to Acadia for our distinctive rocky coastline.\"',\n  },\n  {\n    name: 'Yosemite National Park',\n    image: 'https://www.nps.gov/common/uploads/structured_data/3C84CDD0-1DD8-B71B-0B6E5868AFC75B6B.jpg',\n    review: '\"The walk to Lower Yosemite Fall is a popular and easy hike.\"',\n  },\n  {\n    name: 'Yosemite National Park',\n    image: 'https://www.nps.gov/common/uploads/structured_data/3C84C97E-1DD8-B71B-0B5DD2112C58C175.jpg',\n    review: '\"Tenaya Lake is a favorite place to stop along the Tioga Road in summer.\"',\n  },\n  {\n    name: 'Yosemite National Park',\n    image: 'https://www.nps.gov/common/uploads/structured_data/3C84C3C0-1DD8-B71B-0BFF90B64283C3D8.jpg',\n    review: '\"Cathedral Peak is one of the most recognizable peaks in the Yosemite Wilderness.\"',\n  },\n];\n\nexport default slideShow;\n","import React from 'react';\nimport { Zoom } from 'react-slideshow-image';\nimport slideShow from './slideshow-data';\nimport 'react-slideshow-image/dist/styles.css';\n\nconst SlideShow = () => {\n  const zoomInProperties = {\n    indicators: true,\n    scale: 1.5,\n  };\n  return (\n    <div>\n      <h1 id=\"logo\">National Park Pal!</h1>\n      <h3>Search parks and activities to optimize your road trip experience!</h3>\n      <Zoom {...zoomInProperties}>\n        { slideShow.map((each, index) => (\n          <div key={index}>\n            <h2>{each.name}</h2>\n            <h4>{each.review}</h4>\n            <img style={{ width: '60%', height: '70%' }} src={each.image} alt=\"park pic\" />\n          </div>\n        ))}\n      </Zoom>\n    </div>\n  );\n};\n\nexport default SlideShow;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"container\">\n    <div id=\"login-button\">NotFound</div>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\n\nconst Wishlist = ({ userID }) => {\n\n  const [wishList, setWishList] = useState([]);\n\n  useEffect(() => {\n    async function getWishList(data) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userID: data })\n      };\n      const response = await fetch(`/park/wishlist/get`, requestOptions);\n      response.json().then((data) => setWishList(data));\n    };\n    getWishList(userID);\n}, [userID]);\n\n  return (\n  <div>\n    {wishList.map(park => <h6 key={park.id}>{park.name}</h6>)}\n  </div>\n  )\n};\n\nexport default Wishlist;","import React, { useEffect, useState } from 'react';\n\nconst ParkHistory = ({ userID }) => {\n\n  const [history, setHistory] = useState(['Please Add Some Parks!']);\n\n  useEffect(() => {\n    async function getHistory(data) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userID: data })\n      };\n      const response = await fetch(`/park/history/get`, requestOptions);\n      response.json().then((data) => setHistory(data));\n    };\n    getHistory(userID);\n}, [userID]);\n\n  return (\n  <div>\n    {history.map(park => <h6 key={park.id}>{park.name}</h6>)}\n  </div>\n  )\n};\n\nexport default ParkHistory;","import React from 'react';\nimport WishList from './Wishlist';\nimport ParkHistory from './ParkHistory';\n\n\nconst Profile = ({ user }) => {\n\n  const imageStyle = {\n    height: '500',\n    width: '400',\n    borderRadius: '50%',\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h2>Welcome To Your Profile {user.name}!</h2>\n      <div>\n      <img src={user.image} alt='profile' style={imageStyle}/>\n      <br />\n      <br />\n        <h1 style={{float: 'left', marginLeft: '100px'}}>\n          Park WishList\n          <WishList userID={user.id} />\n        </h1>\n        <h1 style={{float: 'right', marginRight: '100px'}}>\n          Park History\n          <ParkHistory userID={user.id} />\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nconst InfoWindow = ({\n  url, name, desc, image, user,\n}) => {\n  const infoWindowStyle = {\n    position: 'relative',\n    bottom: 150,\n    left: '-45px',\n    width: 400,\n    backgroundColor: 'white',\n    boxShadow: '0 2px 7px 1px rgba(0, 0, 0, 0.3)',\n    padding: 20,\n    fontSize: 14,\n    zIndex: 100,\n  };\n\n  const picStyle = {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  };\n\n  const saveWishlist = (data) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: name, userID: data.id })\n    };\n    fetch(`/park/wishlist`, requestOptions)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n\n  const saveParkHistory = (data) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: name, userID: data.id })\n    };\n    fetch(`/park/history`, requestOptions)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n\n  return (\n    <div style={infoWindowStyle}>\n      <div style={{ fontSize: 16 }}>\n        {name}\n      </div>\n      <br />\n      <img style={picStyle} src={image} alt=\"Park\" />\n      <br />\n      <br />\n      <div>\n        {desc}\n      </div>\n      <br />\n      <div>\n        Park Website:\n        <br />\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\n      </div>\n      <br />\n      <button style={{marginRight: '20px'}} onClick={() => saveWishlist(user)}>Add To WishList</button>\n      <button onClick={() => saveParkHistory(user)}>Seen It!</button>\n    </div>\n  );\n};\n\nexport default InfoWindow;\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport NPSLogo from './images/NPS.png';\nimport InfoWindow from './InfoWindow';\n\nconst Marker = ({\n  url, name, desc, imagePark, user,\n}) => {\n  const [isShown, setIsShown] = useState(false);\n\n  const [isHovered, setIsHovered] = useState(false);\n\n  const clickHandler = () => {\n    setIsShown(!isShown);\n    setIsHovered(false);\n  };\n\n  return (\n    <div\n      role=\"button\"\n      onClick={() => clickHandler()}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => {\n        setIsHovered(false);\n        setIsShown(false);\n      }}\n    >\n      <img className=\"npmarker\" src={NPSLogo} alt=\"NPS Logo\" />\n      {isShown && <InfoWindow name={name} desc={desc} url={url} image={imagePark} user={user}/>}\n      {isHovered && (<div className=\"marker\">{name}</div>)}\n    </div>\n  );\n};\n\nexport default Marker;\n","const mapStyling = [\n    {\n        \"stylers\": [\n            {\n                \"hue\": \"#ff1a00\"\n            },\n            {\n                \"invert_lightness\": true\n            },\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 33\n            },\n            {\n                \"gamma\": 0.5\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#2D333C\"\n            }\n        ]\n    }\n]\n\n\nexport default mapStyling;","/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from './Marker';\nimport { google } from './.config';\nimport MapStyling from './MapStyling';\n\nconst Map = ({ parks, user }) => {\n  const [myMarkers, setMarkers] = React.useState([]);\n  const [mapReference, setMapReference] = useState(null);\n  const [mapsReference, setMapsReference] = useState(null);\n  const [center, setCenter] = useState({ lat: 39.82, lng: -98.57 });\n  const [start, setStart] = useState('');\n\n  useEffect(() => {\n    setMarkers(parks);\n    setCenter({ lat: 39.82, lng: -98.57 });\n  }, [parks]);\n\n  const handleStart = (event) => {\n    setStart(event.target.value);\n  };\n\n  const handleDirections = () => {\n    const waypnts = [];\n\n    myMarkers.forEach((park, index) => {\n      if (index === myMarkers.length - 1) {\n        return;\n      }\n      waypnts.push({\n        location: park.name,\n        stopover: true,\n      });\n    });\n\n    const directionsService = new mapsReference.DirectionsService();\n    const directionsDisplay = new mapsReference.DirectionsRenderer();\n    directionsService.route({\n      origin: start,\n      destination: myMarkers[myMarkers.length - 1].name,\n      waypoints: waypnts,\n      travelMode: 'DRIVING',\n      optimizeWaypoints: true,\n    }, (response, status) => {\n      if (status === 'OK') {\n        directionsDisplay.setDirections(response);\n        //\n        const routePolyline = new mapsReference.Polyline({\n          path: response.routes[0].overview_path,\n        });\n        routePolyline.setMap(mapReference);\n      } else {\n        console.error(`Directions request failed due to ${status}`);\n      }\n    });\n  };\n\n  const onKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      handleDirections(start);\n      setStart('');\n    }\n  };\n\n  return (\n    <div>\n      <br />\n      <div>\n        <label>\n          Where Are You Starting From?\n          <br />\n          <br />\n          <input type=\"text\" placeholder=\"Starting Point\" value={start} onChange={handleStart} onKeyUp={onKeyUp} />\n        </label>\n        <button\n          onClick={() => {\n            handleDirections(start);\n            setStart('');\n          }}\n          type=\"submit\"\n        >\n          Get Route!\n        </button>\n      </div>\n      <br />\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: google.MAPS_API_KEY }}\n          options={{styles: MapStyling}}\n          center={center}\n          zoom={5}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => {\n            setMapReference(map);\n            setMapsReference(maps);\n          }}\n        >\n          {myMarkers.map((park) => (\n            <Marker\n              key={park.url}\n              lat={park.lat}\n              lng={park.lng}\n              name={park.name}\n              searchName={park.searchName}\n              url={park.url}\n              desc={park.description}\n              imagePark={park.image}\n              user={user}\n            />\n          ))}\n        </GoogleMapReact>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst RouteForm = ({ getpark }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const onKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      getpark(searchTerm);\n      setSearchTerm('');\n    }\n  };\n\n  return (\n    <div>\n      <br />\n      <div>\n        <label>\n          What States Are You Visiting?\n          <br />\n          <br />\n          <input type=\"text\" placeholder=\"State Name\" value={searchTerm} onChange={handleChange} onKeyUp={onKeyUp} />\n        </label>\n        <button\n          type=\"submit\"\n          onClick={() => {\n            getpark(searchTerm)\n            setSearchTerm('');\n          }}\n        >\n          Add To Trip!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RouteForm;\n","import React from 'react';\nimport spinner from './images/spinner.gif';\nexport default () => (\n  <div>\n    <br />\n    <img\n      src={spinner}\n      style={{ width: '50px', height: '50px', margin: 'auto',}}\n      alt=\"Loading...\"\n    />\n  </div>\n);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SimpleMap from './Map';\nimport RouteForm from './RouteForm';\nimport { nps } from './.config';\nimport Spinner from './spinner';\n\nfunction ParkPal({ user }) {\n  const [parks, setParks] = useState([]);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n\n  }, [parks]);\n\n  const getPark = (userState) => {\n    setLoading(true);\n    console.log(loading);\n\n    let state = userState.toLowerCase();\n    if (state === 'alabama') {\n      state = 'al';\n    } else if (state === 'alaska') {\n      state = 'ak';\n    } else if (state === 'arizona') {\n      state = 'az';\n    } else if (state === 'arkansas') {\n      state = 'ar';\n    } else if (state === 'california') {\n      state = 'ca';\n    } else if (state === 'colorado') {\n      state = 'co';\n    } else if (state === 'Connecticut') {\n      state = 'ct';\n    } else if (state === 'delaware') {\n      state = 'de';\n    } else if (state === 'florida') {\n      state = 'fl';\n    } else if (state === 'georgia') {\n      state = 'ga';\n    } else if (state === 'alaska') {\n      state = 'ak';\n    } else if (state === 'hawaii') {\n      state = 'hi';\n    } else if (state === 'idaho') {\n      state = 'id';\n    } else if (state === 'illinois') {\n      state = 'il';\n    } else if (state === 'indiana') {\n      state = 'in';\n    } else if (state === 'iowa') {\n      state = 'ia';\n    } else if (state === 'kansas') {\n      state = 'ks';\n    } else if (state === 'kentucky') {\n      state = 'ky';\n    } else if (state === 'louisiana') {\n      state = 'la';\n    } else if (state === 'maine') {\n      state = 'me';\n    } else if (state === 'maryland') {\n      state = 'md';\n    } else if (state === 'massachusetts') {\n      state = 'ma';\n    } else if (state === 'michigan') {\n      state = 'mi';\n    } else if (state === 'minnesota') {\n      state = 'mn';\n    } else if (state === 'mississippi') {\n      state = 'ms';\n    } else if (state === 'missouri') {\n      state = 'mo';\n    } else if (state === 'montana') {\n      state = 'mt';\n    } else if (state === 'nebraska') {\n      state = 'ne';\n    } else if (state === 'nevada') {\n      state = 'nv';\n    } else if (state === 'new hampshire') {\n      state = 'nh';\n    } else if (state === 'new jersey') {\n      state = 'nj';\n    } else if (state === 'new mexico') {\n      state = 'nm';\n    } else if (state === 'new york') {\n      state = 'ny';\n    } else if (state === 'north carolina') {\n      state = 'nc';\n    } else if (state === 'north dakota') {\n      state = 'nd';\n    } else if (state === 'ohio') {\n      state = 'oh';\n    } else if (state === 'oklahoma') {\n      state = 'ok';\n    } else if (state === 'oregon') {\n      state = 'or';\n    } else if (state === 'pennsylvania') {\n      state = 'pa';\n    } else if (state === 'rhode island') {\n      state = 'ri';\n    } else if (state === 'south carolina') {\n      state = 'sc';\n    } else if (state === 'south dakota') {\n      state = 'sd';\n    } else if (state === 'tennessee') {\n      state = 'tn';\n    } else if (state === 'texas') {\n      state = 'tx';\n    } else if (state === 'utah') {\n      state = 'ut';\n    } else if (state === 'vermont') {\n      state = 'vt';\n    } else if (state === 'virginia') {\n      state = 'va';\n    } else if (state === 'washington') {\n      state = 'wa';\n    } else if (state === 'west virginia') {\n      state = 'wv';\n    } else if (state === 'wisconsin') {\n      state = 'wi';\n    } else if (state === 'wyoming') {\n      state = 'wy';\n    } else if (state === 'washington dc') {\n      state = 'dc';\n    }\n    axios.get(`https://developer.nps.gov/api/v1/parks?stateCode=${state}&api_key=${nps.NPS_API_KEY}`)\n      .then((res) => res.data.data.forEach((park) => {\n        if (park.latitude.length && !parks.find((entry) => entry.name === park.name) && park.designation === 'National Park') {\n          // eslint-disable-next-line no-shadow\n          setParks((parks) => ([...parks, {\n            lat: parseFloat(park.latitude), lng: parseFloat(park.longitude), name: `${park.name} ${park.designation}`, description: park.description, url: park.url, searchName: park.name, image: park.images[0].url,\n          }]));\n        }\n      }))\n      .then(() => {\n        setLoading(false);\n      })\n  };\n\n  return (\n    <div className=\"ParkPal\">\n      {loading && <Spinner />}\n      <RouteForm getpark={getPark} />\n      <SimpleMap parks={parks} user={user}/>\n    </div>\n  );\n}\n\nexport default ParkPal;\n\n{/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1d/US-NationalParkService-Logo.svg\" alt=\"national parks\" className=\"nps\" /> */}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Activities.css';\n\n\nfunction Activities() {\n\n  // Declare new state variables\n  const [parkActivities, setParkActivities] = useState([]);\n  const [userActivities, setUserActivities] = useState([]);\n  const [resultingParks, setResultingParks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  // Park Activities Search click handler\n  // Updates resulting parks with user selected activities\n  const handleSearchClick = (event) => {\n    const searchIds = userActivities.join(',');\n    axios.get(`https://developer.nps.gov/api/v1/activities/parks?id=${searchIds}&api_key=gwHKy0xMUoHYHE6MhzXkBbKYuPcejjLlkuMpJdK0`)\n      .then(res => {\n        const currentParks = res.data.data;\n        setResultingParks(currentParks);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n\n  // Activities change handler\n  // Updates user selected activities\n  const handleChange = (event) => {\n    // // Checkboxes\n    // // Declare variables for current event checkbox\n    // const checked = event.target.checked;\n    // const activityId = event.target.id;  // Only Activity IDs can be comma delimited when retrieving parks\n\n    // // Declare array variable for user selected activities\n    // const selectedIds = [...userActivities];\n\n    // // Find index of current activity in selected array\n    // const index = selectedIds.indexOf(activityId);\n\n    // // If checked and activity ID is not in selected array, add activity ID to array\n    // if (checked && index === -1) {\n    //   selectedIds.push(activityId);\n    // } // Else if unchecked and activity ID is in selected array, remove activity ID from array\n    // else if (!checked && index > -1) {\n    //   selectedIds.splice(index, 1);\n    // }\n\n    // setUserActivities(selectedIds);\n\n    // Multiple Select Box\n    // Declare variable for selected options\n    const selectedOptions = event.target.selectedOptions;\n\n    // Declare variable for favorites array\n    const selectedIds = Array.from(selectedOptions, (item) => item.id);\n\n    // Update favorite activities state\n    setUserActivities(selectedIds);\n  }\n\n\n  // Execute on every update to parkActivities\n  useEffect(() => {\n    // Confirm update of setParkActivities on page load\n    // console.log('Park Activities update', parkActivities);\n  }, [parkActivities]);\n\n\n  // Execute on every update to userActivities\n  useEffect(() => {\n    // Confirm update of setUserActivities in handleChange\n    // console.log('Favorites update', userActivities);\n  }, [userActivities]);\n\n\n  // Execute on every update to resultingParks\n  useEffect(() => {\n    // Confirm update of setResultingActivities in handleClick\n    // console.log('Search update', resultingParks);\n  }, [resultingParks]);\n\n\n  // Retrieve all activity categories in national parks upon initial rendering of page\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get('https://developer.nps.gov/api/v1/activities?api_key=gwHKy0xMUoHYHE6MhzXkBbKYuPcejjLlkuMpJdK0')\n      .then(res => {\n        const currentActivities = res.data.data;\n        setParkActivities(currentActivities);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, [])\n\n\n  // Render Activities component\n  return (\n    <div className=\"activities\">\n      {isLoading ? (\n        <p>Loading . . . </p>\n      ) : (\n        <div className=\"activities-search\">\n          <form>\n            <h3>Choose your favorite park activities:</h3>\n            <select multiple={true} size={10} onChange={handleChange}>\n              {parkActivities.map(({id, name}) => {\n                return (\n                  <option key={id} id={id} value={name}>{name}</option>\n                )\n              })}\n            </select>\n            <br />\n            <br />\n            <button className=\"button\" type=\"button\" onClick={handleSearchClick}>Search</button>\n          </form>\n          <hr />\n          <h2>Parks with your favorite activity:</h2>\n            {resultingParks.map(({id, name, parks}) => {\n              return (\n                <div className=\"selected-activity\" key={id}>\n                  <h2>{name}</h2>\n                  <br />\n                    {parks.map(({fullName, url}) => {\n                      return (\n                        <div className=\"activity-park\" key={url}>\n                          <li><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{fullName}</a></li>\n                          <br />\n                        </div>\n                      )\n                    })}\n                  <br />\n                </div>\n              )\n            })}\n        </div>\n      )}\n    </div>\n  )\n\n}\n\n\nexport default Activities;","import React from 'react';\nimport SlideShow from './slideshow';\n\nconst NotSignedIn = () => (\n  <div>\n    <h3>Please Sign In</h3>\n    <SlideShow />\n  </div>\n);\n\nexport default NotSignedIn;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport SlideShow from './slideshow';\n// import { slideShow } from './slideshow-data';\nimport NotFound from './NotFound';\nimport Profile from './Profile';\nimport ParkPal from './ParkPal';\nimport Activities from './Activities';\nimport NotSignedIn from './NotSignedIn';\n\n\nconst Home = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  // const [slides] = useState(slideShow);\n  // const [currentImage] = useState(slideShow[0]);\n  const { REACT_APP_SERVER_PORT } = process.env || 8080;\n\n  useEffect(() => {\n    fetch(`/auth/login/success`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error('authentication failed');\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        setIsAuthenticated(true);\n        setUser(responseJson.user);\n      })\n      .catch((error) => {\n        setIsAuthenticated(false);\n        console.error(error);\n      });\n  }, []);\n\n  const logout = () => {\n    console.log('logging out');\n    window.open(`/auth/logout`, '_self');\n  };\n  const googleSignIn = () => {\n    window.open(`/auth/google`, '_self');\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <main>\n          <nav id=\"navbar\">\n            <div>\n              <NavLink activeClassName=\"active\" exact to=\"/\">Home</NavLink>\n              { !isAuthenticated && <Link to=\"/login\" onClick={googleSignIn}>Login</Link> }\n              { isAuthenticated && <Link to=\"/logout\" onClick={logout}>Logout</Link> }\n              <NavLink activeClassName=\"active\" to=\"/parkpal\">Park Search</NavLink>\n              <NavLink activeClassName=\"active\" to=\"/activity\">Activity Search</NavLink>\n              { isAuthenticated && <NavLink activeClassName=\"active\" to=\"/profile\">Profile</NavLink> }\n            </div>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={SlideShow} />\n            <Route path=\"/login\" component={SlideShow} />\n            <Route path=\"/logout\" component={SlideShow} />\n            <Route path=\"/notsignedin\" component={NotSignedIn} />\n            {/* <Route path=\"/dashboard\"  isAuthenticated={isAuthenticated} />} /> */}\n            { isAuthenticated\n              ? (\n                <>\n                  <Route path=\"/profile\" render={(props) => <Profile {...props} user={user} />} />\n                  <Route path=\"/parkpal\" render={(props) => <ParkPal {...props} user={user} />} />\n                  <Route path=\"/activity\" component={Activities} />\n                </>\n              ) : <Redirect to=\"/notsignedin\" />}\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}